<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="800" height="310" onload="init(evt)" viewBox="0 0 800 310" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs >
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
</style>
<script type="text/ecmascript">
<![CDATA[
	var details, searchbtn, matchedtxt, svg;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	// mouse-over for info
	function s(node) {		// show
		info = g_to_text(node);
		details.nodeValue = "Function: " + info;
	}
	function c() {			// clear
		details.nodeValue = ' ';
	}

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	})

	// functions
	function find_child(parent, name, attr) {
		var children = parent.childNodes;
		for (var i=0; i<children.length;i++) {
			if (children[i].tagName == name)
				return (attr != undefined) ? children[i].attributes[attr].value : children[i];
		}
		return;
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_"+attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_"+attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_"+attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes["width"].value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;

		// Smaller than this size won't fit anything
		if (w < 2*12*0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x=txt.length-2; x>0; x--) {
			if (t.getSubStringLength(0, x+2) <= w) {
				t.textContent = txt.substring(0,x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - 10) * ratio + 10;
				if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_child(c[i], x-10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = 10;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (10*2);
			}
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr["width"].value);
		var xmin = parseFloat(attr["x"].value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr["y"].value);
		var ratio = (svg.width.baseVal.value - 2*10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "1.0";

		var el = document.getElementsByTagName("g");
		for(var i=0;i<el.length;i++){
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a["x"].value);
			var ew = parseFloat(a["width"].value);
			// Is it an ancestor
			if (0 == 0) {
				var upstack = parseFloat(a["y"].value) > ymin;
			} else {
				var upstack = parseFloat(a["y"].value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.style["opacity"] = "0.5";
					zoom_parent(e);
					e.onclick = function(e){unzoom(); zoom(this);};
					update_text(e);
				}
				// not in current path
				else
					e.style["display"] = "none";
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.style["display"] = "none";
				}
				else {
					zoom_child(e, xmin, ratio);
					e.onclick = function(e){zoom(this);};
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "0.0";

		var el = document.getElementsByTagName("g");
		for(i=0;i<el.length;i++) {
			el[i].style["display"] = "block";
			el[i].style["opacity"] = "1";
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.getElementsByTagName("rect");
		for (var i=0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.style["opacity"] = "0.1";
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.style["opacity"] = "0.0";
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementsByTagName("g");
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			if (e.attributes["class"].value != "func_g")
				continue;
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (rect == null) {
				// the rect might be wrapped in an anchor
				// if nameattr href is being used
				if (rect = find_child(e, "a")) {
				    rect = find_child(r, "rect");
				}
			}
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes["width"].value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes["x"].value);
				orig_save(rect, "fill");
				rect.attributes["fill"].value =
				    "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.style["opacity"] = "1.0";
		searchbtn.firstChild.nodeValue = "Reset Search"

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.style["opacity"] = "1.0";
		pct = 100 * count / maxwidth;
		if (pct == 100)
			pct = "100"
		else
			pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
	function searchover(e) {
		searchbtn.style["opacity"] = "1.0";
	}
	function searchout(e) {
		if (searching) {
			searchbtn.style["opacity"] = "1.0";
		} else {
			searchbtn.style["opacity"] = "0.1";
		}
	}
]]>
</script>
<rect x="0.0" y="0" width="800.0" height="310.0" fill="url(#background)"  />
<text text-anchor="middle" x="400.00" y="24" font-size="17" font-family="Verdana" fill="rgb(0,0,0)"  >Ejemplo Flame Graph</text>
<text text-anchor="" x="10.00" y="293" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="details" > </text>
<text text-anchor="" x="10.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" >Reset Zoom</text>
<text text-anchor="" x="690.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" >Search</text>
<text text-anchor="" x="690.00" y="293" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="matched" > </text>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.BufferedReader$1.hasNext() (3 samples, 0.03%)</title><rect x="789.7" y="181" width="0.2" height="15.0" fill="rgb(223,53,6)" rx="2" ry="2" />
<text text-anchor="" x="792.68" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.CopyOnWriteArrayList.getArray() (2 samples, 0.02%)</title><rect x="11.3" y="133" width="0.2" height="15.0" fill="rgb(228,73,50)" rx="2" ry="2" />
<text text-anchor="" x="14.30" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.HashMap$KeySet.iterator() (3 samples, 0.03%)</title><rect x="739.2" y="149" width="0.3" height="15.0" fill="rgb(211,87,53)" rx="2" ry="2" />
<text text-anchor="" x="742.23" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.hashCode() (2 samples, 0.02%)</title><rect x="786.5" y="165" width="0.2" height="15.0" fill="rgb(235,221,26)" rx="2" ry="2" />
<text text-anchor="" x="789.51" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Arrays.copyOf(char[], int) (203 samples, 2.11%)</title><rect x="98.6" y="85" width="16.5" height="15.0" fill="rgb(231,180,0)" rx="2" ry="2" />
<text text-anchor="" x="101.65" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.jerolba.codemotion.ElQuijoteMap.lambda$removeSpecialChars$1(java.lang.String) (6 samples, 0.06%)</title><rect x="787.6" y="85" width="0.5" height="15.0" fill="rgb(220,117,49)" rx="2" ry="2" />
<text text-anchor="" x="790.65" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.stream.AbstractPipeline.evaluate(java.util.stream.TerminalOp) (11 samples, 0.11%)</title><rect x="787.3" y="181" width="0.9" height="15.0" fill="rgb(249,19,7)" rx="2" ry="2" />
<text text-anchor="" x="790.32" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Arrays.copyOf(char[], int) (573 samples, 5.96%)</title><rect x="739.6" y="117" width="46.5" height="15.0" fill="rgb(225,12,11)" rx="2" ry="2" />
<text text-anchor="" x="742.63" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.AbstractStringBuilder.expandCapacity(int) (633 samples, 6.58%)</title><rect x="285.4" y="85" width="51.4" height="15.0" fill="rgb(242,137,27)" rx="2" ry="2" />
<text text-anchor="" x="288.44" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringBuilder.append(java.lang.String) (2 samples, 0.02%)</title><rect x="788.7" y="133" width="0.2" height="15.0" fill="rgb(251,30,49)" rx="2" ry="2" />
<text text-anchor="" x="791.70" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.getChars(int, int, char[], int) (276 samples, 2.87%)</title><rect x="336.8" y="101" width="22.4" height="15.0" fill="rgb(227,118,54)" rx="2" ry="2" />
<text text-anchor="" x="339.78" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >j..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.valueOf(java.lang.Object) (837 samples, 8.70%)</title><rect x="115.1" y="133" width="67.9" height="15.0" fill="rgb(221,189,26)" rx="2" ry="2" />
<text text-anchor="" x="118.11" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.la..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.jerolba.codemotion.ElQuijoteMap.main(java.lang.String[]) (9,616 samples, 99.99%)</title><rect x="10.0" y="245" width="779.9" height="15.0" fill="rgb(219,126,35)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="255.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >com.jerolba.codemotion.ElQuijoteMap.main(java.lang.String[])</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.jerolba.codemotion.ElQuijoteMap.toLowerCase(java.util.List) (3 samples, 0.03%)</title><rect x="789.1" y="213" width="0.3" height="15.0" fill="rgb(215,7,9)" rx="2" ry="2" />
<text text-anchor="" x="792.11" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.jerolba.codemotion.ElQuijoteMap.readBook(java.lang.String) (9,616 samples, 99.99%)</title><rect x="10.0" y="229" width="779.9" height="15.0" fill="rgb(237,207,34)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >com.jerolba.codemotion.ElQuijoteMap.readBook(java.lang.String)</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.AbstractStringBuilder.append(java.lang.String) (575 samples, 5.98%)</title><rect x="739.5" y="165" width="46.6" height="15.0" fill="rgb(220,223,1)" rx="2" ry="2" />
<text text-anchor="" x="742.47" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.stream.ReferencePipeline$3$1.accept(java.lang.Object) (7 samples, 0.07%)</title><rect x="787.6" y="101" width="0.6" height="15.0" fill="rgb(206,102,12)" rx="2" ry="2" />
<text text-anchor="" x="790.65" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.AbstractCollection.toString() (8,973 samples, 93.30%)</title><rect x="11.7" y="165" width="727.8" height="15.0" fill="rgb(218,207,20)" rx="2" ry="2" />
<text text-anchor="" x="14.70" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.util.AbstractCollection.toString()</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.HashMap.getOrDefault(java.lang.Object, java.lang.Object) (3 samples, 0.03%)</title><rect x="786.4" y="197" width="0.3" height="15.0" fill="rgb(232,17,52)" rx="2" ry="2" />
<text text-anchor="" x="789.43" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.&lt;init&gt;(char[], int, int) (3 samples, 0.03%)</title><rect x="786.2" y="181" width="0.2" height="15.0" fill="rgb(251,19,38)" rx="2" ry="2" />
<text text-anchor="" x="789.19" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ch.qos.logback.classic.Logger.filterAndLog_0_Or3Plus(java.lang.String, org.slf4j.Marker, ch.qos.logback.classic.Level, java.lang.String, java.lang.Object[], java.lang.Throwable) (7 samples, 0.07%)</title><rect x="10.9" y="181" width="0.6" height="15.0" fill="rgb(214,177,43)" rx="2" ry="2" />
<text text-anchor="" x="13.89" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.AbstractStringBuilder.expandCapacity(int) (573 samples, 5.96%)</title><rect x="739.6" y="133" width="46.5" height="15.0" fill="rgb(221,135,16)" rx="2" ry="2" />
<text text-anchor="" x="742.63" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.jerolba.codemotion.ElQuijoteMap.removeSpecialChars(java.util.List) (13 samples, 0.14%)</title><rect x="787.2" y="213" width="1.1" height="15.0" fill="rgb(211,168,6)" rx="2" ry="2" />
<text text-anchor="" x="790.24" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.LinkedList.indexOf(java.lang.Object) (3 samples, 0.03%)</title><rect x="787.9" y="37" width="0.2" height="15.0" fill="rgb(209,124,5)" rx="2" ry="2" />
<text text-anchor="" x="790.89" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.ArrayList$Itr.next() (2 samples, 0.02%)</title><rect x="789.4" y="213" width="0.2" height="15.0" fill="rgb(248,171,8)" rx="2" ry="2" />
<text text-anchor="" x="792.43" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.&lt;init&gt;(char[], int, int) (4 samples, 0.04%)</title><rect x="362.7" y="133" width="0.4" height="15.0" fill="rgb(242,189,21)" rx="2" ry="2" />
<text text-anchor="" x="365.73" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Spliterators$ArraySpliterator.forEachRemaining(java.util.function.Consumer) (7 samples, 0.07%)</title><rect x="787.6" y="117" width="0.6" height="15.0" fill="rgb(214,85,47)" rx="2" ry="2" />
<text text-anchor="" x="790.65" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.HashMap.hash(java.lang.Object) (2 samples, 0.02%)</title><rect x="786.5" y="181" width="0.2" height="15.0" fill="rgb(208,43,3)" rx="2" ry="2" />
<text text-anchor="" x="789.51" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.LinkedList.contains(java.lang.Object) (4 samples, 0.04%)</title><rect x="787.8" y="53" width="0.3" height="15.0" fill="rgb(243,181,30)" rx="2" ry="2" />
<text text-anchor="" x="790.81" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.split(java.lang.String, int) (3 samples, 0.03%)</title><rect x="788.4" y="181" width="0.2" height="15.0" fill="rgb(221,57,50)" rx="2" ry="2" />
<text text-anchor="" x="791.38" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.HashMap.put(java.lang.Object, java.lang.Object) (7 samples, 0.07%)</title><rect x="786.7" y="197" width="0.5" height="15.0" fill="rgb(251,120,33)" rx="2" ry="2" />
<text text-anchor="" x="789.67" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.AbstractCollection.toArray(java.lang.Object[]) (2 samples, 0.02%)</title><rect x="788.5" y="165" width="0.1" height="15.0" fill="rgb(241,130,21)" rx="2" ry="2" />
<text text-anchor="" x="791.46" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringBuilder.toString() (2 samples, 0.02%)</title><rect x="788.9" y="197" width="0.2" height="15.0" fill="rgb(250,228,13)" rx="2" ry="2" />
<text text-anchor="" x="791.95" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringBuilder.toString() (3 samples, 0.03%)</title><rect x="786.2" y="197" width="0.2" height="15.0" fill="rgb(208,17,2)" rx="2" ry="2" />
<text text-anchor="" x="789.19" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringBuilder.append(java.lang.String) (2,214 samples, 23.02%)</title><rect x="183.0" y="133" width="179.6" height="15.0" fill="rgb(224,133,32)" rx="2" ry="2" />
<text text-anchor="" x="186.00" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.lang.StringBuilder..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.valueOf(java.lang.Object) (3 samples, 0.03%)</title><rect x="788.6" y="181" width="0.3" height="15.0" fill="rgb(225,196,30)" rx="2" ry="2" />
<text text-anchor="" x="791.62" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ch.qos.logback.classic.LoggerContext.getTurboFilterChainDecision_0_3OrMore(org.slf4j.Marker, ch.qos.logback.classic.Logger, ch.qos.logback.classic.Level, java.lang.String, java.lang.Object[], java.lang.Throwable) (7 samples, 0.07%)</title><rect x="10.9" y="165" width="0.6" height="15.0" fill="rgb(232,182,37)" rx="2" ry="2" />
<text text-anchor="" x="13.89" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.stream.ReduceOps$ReduceOp.evaluateSequential(java.util.stream.PipelineHelper, java.util.Spliterator) (8 samples, 0.08%)</title><rect x="787.6" y="165" width="0.6" height="15.0" fill="rgb(216,129,17)" rx="2" ry="2" />
<text text-anchor="" x="790.57" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringBuilder.append(char) (639 samples, 6.64%)</title><rect x="63.3" y="149" width="51.8" height="15.0" fill="rgb(233,147,47)" rx="2" ry="2" />
<text text-anchor="" x="66.29" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.HashMap.newNode(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node) (5 samples, 0.05%)</title><rect x="786.8" y="165" width="0.4" height="15.0" fill="rgb(220,125,36)" rx="2" ry="2" />
<text text-anchor="" x="789.84" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>ch.qos.logback.classic.Logger.trace(java.lang.String) (7 samples, 0.07%)</title><rect x="10.9" y="197" width="0.6" height="15.0" fill="rgb(236,29,13)" rx="2" ry="2" />
<text text-anchor="" x="13.89" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.HashMap$HashIterator.nextNode() (4,185 samples, 43.52%)</title><rect x="399.8" y="133" width="339.4" height="15.0" fill="rgb(235,161,44)" rx="2" ry="2" />
<text text-anchor="" x="402.80" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.util.HashMap$HashIterator.nextNode()</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringBuilder.append(java.lang.Object) (9,548 samples, 99.28%)</title><rect x="11.7" y="197" width="774.4" height="15.0" fill="rgb(208,220,13)" rx="2" ry="2" />
<text text-anchor="" x="14.70" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.lang.StringBuilder.append(java.lang.Object)</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.AbstractStringBuilder.append(char) (639 samples, 6.64%)</title><rect x="63.3" y="133" width="51.8" height="15.0" fill="rgb(229,177,27)" rx="2" ry="2" />
<text text-anchor="" x="66.29" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.jerolba.codemotion.ElQuijoteMap.split(java.lang.String) (10 samples, 0.10%)</title><rect x="788.3" y="213" width="0.8" height="15.0" fill="rgb(230,216,2)" rx="2" ry="2" />
<text text-anchor="" x="791.30" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.length() (42 samples, 0.44%)</title><rect x="359.2" y="101" width="3.4" height="15.0" fill="rgb(240,177,3)" rx="2" ry="2" />
<text text-anchor="" x="362.16" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Arrays.copyOfRange(char[], int, int) (3 samples, 0.03%)</title><rect x="362.8" y="117" width="0.3" height="15.0" fill="rgb(205,83,34)" rx="2" ry="2" />
<text text-anchor="" x="365.81" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.AbstractStringBuilder.append(java.lang.String) (2,037 samples, 21.18%)</title><rect x="197.4" y="117" width="165.2" height="15.0" fill="rgb(241,62,2)" rx="2" ry="2" />
<text text-anchor="" x="200.36" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.lang.AbstractStr..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.jerolba.codemotion.ElQuijoteMap.removeSpecialChars(java.lang.String) (6 samples, 0.06%)</title><rect x="787.6" y="69" width="0.5" height="15.0" fill="rgb(242,87,49)" rx="2" ry="2" />
<text text-anchor="" x="790.65" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.AbstractCollection.toString() (3 samples, 0.03%)</title><rect x="788.6" y="165" width="0.3" height="15.0" fill="rgb(212,72,6)" rx="2" ry="2" />
<text text-anchor="" x="791.62" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.stream.ReduceOps$3.getOpFlags() (2 samples, 0.02%)</title><rect x="787.4" y="165" width="0.2" height="15.0" fill="rgb(226,23,17)" rx="2" ry="2" />
<text text-anchor="" x="790.40" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.HashMap$KeyIterator.next() (4,638 samples, 48.23%)</title><rect x="363.1" y="149" width="376.1" height="15.0" fill="rgb(223,131,14)" rx="2" ry="2" />
<text text-anchor="" x="366.06" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.util.HashMap$KeyIterator.next()</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.AbstractStringBuilder.ensureCapacityInternal(int) (573 samples, 5.96%)</title><rect x="739.6" y="149" width="46.5" height="15.0" fill="rgb(238,1,23)" rx="2" ry="2" />
<text text-anchor="" x="742.63" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.stream.AbstractPipeline.wrapAndCopyInto(java.util.stream.Sink, java.util.Spliterator) (8 samples, 0.08%)</title><rect x="787.6" y="149" width="0.6" height="15.0" fill="rgb(245,183,23)" rx="2" ry="2" />
<text text-anchor="" x="790.57" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.AbstractStringBuilder.expandCapacity(int) (203 samples, 2.11%)</title><rect x="98.6" y="101" width="16.5" height="15.0" fill="rgb(246,64,35)" rx="2" ry="2" />
<text text-anchor="" x="101.65" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringBuilder.append(java.lang.String) (575 samples, 5.98%)</title><rect x="739.5" y="181" width="46.6" height="15.0" fill="rgb(230,129,17)" rx="2" ry="2" />
<text text-anchor="" x="742.47" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Arrays.copyOf(char[], int) (631 samples, 6.56%)</title><rect x="285.6" y="69" width="51.2" height="15.0" fill="rgb(213,149,35)" rx="2" ry="2" />
<text text-anchor="" x="288.60" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java...</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.AbstractStringBuilder.append(java.lang.String) (2 samples, 0.02%)</title><rect x="788.7" y="117" width="0.2" height="15.0" fill="rgb(214,57,17)" rx="2" ry="2" />
<text text-anchor="" x="791.70" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringBuilder.toString() (6 samples, 0.06%)</title><rect x="362.6" y="149" width="0.5" height="15.0" fill="rgb(249,88,1)" rx="2" ry="2" />
<text text-anchor="" x="365.57" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.stream.ReferencePipeline.collect(java.util.stream.Collector) (11 samples, 0.11%)</title><rect x="787.3" y="197" width="0.9" height="15.0" fill="rgb(249,144,35)" rx="2" ry="2" />
<text text-anchor="" x="790.32" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.jerolba.codemotion.ElQuijoteMap.addWord(java.lang.String) (9,574 samples, 99.55%)</title><rect x="10.7" y="213" width="776.5" height="15.0" fill="rgb(248,32,43)" rx="2" ry="2" />
<text text-anchor="" x="13.73" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >com.jerolba.codemotion.ElQuijoteMap.addWord(java.lang.String)</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringBuilder.append(java.lang.Object) (4 samples, 0.04%)</title><rect x="788.6" y="197" width="0.3" height="15.0" fill="rgb(209,158,39)" rx="2" ry="2" />
<text text-anchor="" x="791.62" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Spliterators$IteratorSpliterator.tryAdvance(java.util.function.Consumer) (3 samples, 0.03%)</title><rect x="789.7" y="197" width="0.2" height="15.0" fill="rgb(211,50,33)" rx="2" ry="2" />
<text text-anchor="" x="792.68" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringBuilder.append(java.lang.Object) (2 samples, 0.02%)</title><rect x="788.7" y="149" width="0.2" height="15.0" fill="rgb(239,19,5)" rx="2" ry="2" />
<text text-anchor="" x="791.70" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.split(java.lang.String) (4 samples, 0.04%)</title><rect x="788.3" y="197" width="0.3" height="15.0" fill="rgb(240,213,52)" rx="2" ry="2" />
<text text-anchor="" x="791.30" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.stream.AbstractPipeline.copyInto(java.util.stream.Sink, java.util.Spliterator) (8 samples, 0.08%)</title><rect x="787.6" y="133" width="0.6" height="15.0" fill="rgb(218,23,16)" rx="2" ry="2" />
<text text-anchor="" x="790.57" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.CopyOnWriteArrayList.size() (4 samples, 0.04%)</title><rect x="11.1" y="149" width="0.4" height="15.0" fill="rgb(249,57,47)" rx="2" ry="2" />
<text text-anchor="" x="14.14" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.AbstractStringBuilder.ensureCapacityInternal(int) (1,330 samples, 13.83%)</title><rect x="228.9" y="101" width="107.9" height="15.0" fill="rgb(233,56,1)" rx="2" ry="2" />
<text text-anchor="" x="231.91" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.lang.Abs..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.AbstractStringBuilder.ensureCapacityInternal(int) (478 samples, 4.97%)</title><rect x="76.3" y="117" width="38.8" height="15.0" fill="rgb(241,137,6)" rx="2" ry="2" />
<text text-anchor="" x="79.35" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >jav..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.Integer.valueOf(int) (3 samples, 0.03%)</title><rect x="11.5" y="197" width="0.2" height="15.0" fill="rgb(229,221,41)" rx="2" ry="2" />
<text text-anchor="" x="14.46" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringBuilder.append(java.lang.Object) (3,051 samples, 31.73%)</title><rect x="115.1" y="149" width="247.5" height="15.0" fill="rgb(221,108,32)" rx="2" ry="2" />
<text text-anchor="" x="118.11" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.lang.StringBuilder.append(j..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>all (9,617 samples, 100%)</title><rect x="10.0" y="261" width="780.0" height="15.0" fill="rgb(223,184,36)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="271.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.valueOf(java.lang.Object) (8,973 samples, 93.30%)</title><rect x="11.7" y="181" width="727.8" height="15.0" fill="rgb(210,39,50)" rx="2" ry="2" />
<text text-anchor="" x="14.70" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.lang.String.valueOf(java.lang.Object)</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Arrays.copyOfRange(char[], int, int) (3 samples, 0.03%)</title><rect x="786.2" y="165" width="0.2" height="15.0" fill="rgb(247,23,29)" rx="2" ry="2" />
<text text-anchor="" x="789.19" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Spliterators$1Adapter.hasNext() (4 samples, 0.04%)</title><rect x="789.6" y="213" width="0.3" height="15.0" fill="rgb(226,197,0)" rx="2" ry="2" />
<text text-anchor="" x="792.59" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean) (7 samples, 0.07%)</title><rect x="786.7" y="181" width="0.5" height="15.0" fill="rgb(242,228,30)" rx="2" ry="2" />
<text text-anchor="" x="789.67" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
</svg>
