<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="800" height="278" onload="init(evt)" viewBox="0 0 800 278" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs >
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	.func_g:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
</style>
<script type="text/ecmascript">
<![CDATA[
	var details, searchbtn, matchedtxt, svg;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	// mouse-over for info
	function s(node) {		// show
		info = g_to_text(node);
		details.nodeValue = "Function: " + info;
	}
	function c() {			// clear
		details.nodeValue = ' ';
	}

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	})

	// functions
	function find_child(parent, name, attr) {
		var children = parent.childNodes;
		for (var i=0; i<children.length;i++) {
			if (children[i].tagName == name)
				return (attr != undefined) ? children[i].attributes[attr].value : children[i];
		}
		return;
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_"+attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_"+attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_"+attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes["width"].value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes["x"].value = parseFloat(r.attributes["x"].value) +3;

		// Smaller than this size won't fit anything
		if (w < 2*12*0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x=txt.length-2; x>0; x--) {
			if (t.getSubStringLength(0, x+2) <= w) {
				t.textContent = txt.substring(0,x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = (parseFloat(e.attributes["x"].value) - x - 10) * ratio + 10;
				if(e.tagName == "text") e.attributes["x"].value = find_child(e.parentNode, "rect", "x") + 3;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseFloat(e.attributes["width"].value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_child(c[i], x-10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes["x"] != undefined) {
				orig_save(e, "x");
				e.attributes["x"].value = 10;
			}
			if (e.attributes["width"] != undefined) {
				orig_save(e, "width");
				e.attributes["width"].value = parseInt(svg.width.baseVal.value) - (10*2);
			}
		}
		if (e.childNodes == undefined) return;
		for(var i=0, c=e.childNodes; i<c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr["width"].value);
		var xmin = parseFloat(attr["x"].value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr["y"].value);
		var ratio = (svg.width.baseVal.value - 2*10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "1.0";

		var el = document.getElementsByTagName("g");
		for(var i=0;i<el.length;i++){
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a["x"].value);
			var ew = parseFloat(a["width"].value);
			// Is it an ancestor
			if (0 == 0) {
				var upstack = parseFloat(a["y"].value) > ymin;
			} else {
				var upstack = parseFloat(a["y"].value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.style["opacity"] = "0.5";
					zoom_parent(e);
					e.onclick = function(e){unzoom(); zoom(this);};
					update_text(e);
				}
				// not in current path
				else
					e.style["display"] = "none";
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.style["display"] = "none";
				}
				else {
					zoom_child(e, xmin, ratio);
					e.onclick = function(e){zoom(this);};
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		var unzoombtn = document.getElementById("unzoom");
		unzoombtn.style["opacity"] = "0.0";

		var el = document.getElementsByTagName("g");
		for(i=0;i<el.length;i++) {
			el[i].style["display"] = "block";
			el[i].style["opacity"] = "1";
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.getElementsByTagName("rect");
		for (var i=0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.style["opacity"] = "0.1";
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.style["opacity"] = "0.0";
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementsByTagName("g");
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			if (e.attributes["class"].value != "func_g")
				continue;
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (rect == null) {
				// the rect might be wrapped in an anchor
				// if nameattr href is being used
				if (rect = find_child(e, "a")) {
				    rect = find_child(r, "rect");
				}
			}
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes["width"].value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes["x"].value);
				orig_save(rect, "fill");
				rect.attributes["fill"].value =
				    "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.style["opacity"] = "1.0";
		searchbtn.firstChild.nodeValue = "Reset Search"

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.style["opacity"] = "1.0";
		pct = 100 * count / maxwidth;
		if (pct == 100)
			pct = "100"
		else
			pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
	function searchover(e) {
		searchbtn.style["opacity"] = "1.0";
	}
	function searchout(e) {
		if (searching) {
			searchbtn.style["opacity"] = "1.0";
		} else {
			searchbtn.style["opacity"] = "0.1";
		}
	}
]]>
</script>
<rect x="0.0" y="0" width="800.0" height="278.0" fill="url(#background)"  />
<text text-anchor="" x="10.00" y="261" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="details" > </text>
<text text-anchor="" x="10.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="unzoom" onclick="unzoom()" style="opacity:0.0;cursor:pointer" >Reset Zoom</text>
<text text-anchor="" x="690.00" y="24" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="search" onmouseover="searchover()" onmouseout="searchout()" onclick="search_prompt()" style="opacity:0.1;cursor:pointer" >Search</text>
<text text-anchor="" x="690.00" y="261" font-size="12" font-family="Verdana" fill="rgb(0,0,0)" id="matched" > </text>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>oracle.jrockit.jfr.VMJFR.getThreadBuffer(int) (2 samples, 5.00%)</title><rect x="692.5" y="133" width="39.0" height="15.0" fill="rgb(217,128,18)" rx="2" ry="2" />
<text text-anchor="" x="695.50" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >ora..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>all (40 samples, 100%)</title><rect x="10.0" y="229" width="780.0" height="15.0" fill="rgb(252,121,45)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="239.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.UnixFileSystem.resolve(java.lang.String, java.lang.String) (4 samples, 10.00%)</title><rect x="283.0" y="149" width="78.0" height="15.0" fill="rgb(254,198,6)" rx="2" ry="2" />
<text text-anchor="" x="286.00" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.io.U..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.TaskQueue.rescheduleMin(long) (1 samples, 2.50%)</title><rect x="751.0" y="181" width="19.5" height="15.0" fill="rgb(245,114,10)" rx="2" ry="2" />
<text text-anchor="" x="754.00" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringCoding$StringDecoder.decode(byte[], int, int) (7 samples, 17.50%)</title><rect x="380.5" y="85" width="136.5" height="15.0" fill="rgb(231,95,42)" rx="2" ry="2" />
<text text-anchor="" x="383.50" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.lang.StringC..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.UnixFileSystem.list(java.io.File) (15 samples, 37.50%)</title><rect x="361.0" y="149" width="292.5" height="15.0" fill="rgb(242,3,30)" rx="2" ry="2" />
<text text-anchor="" x="364.00" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.io.UnixFileSystem.list(java.io.File)</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>oracle.jrockit.jfr.JFRImpl.onNewChunk() (1 samples, 2.50%)</title><rect x="770.5" y="213" width="19.5" height="15.0" fill="rgb(228,83,35)" rx="2" ry="2" />
<text text-anchor="" x="773.50" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.ThreadLocal.get() (2 samples, 5.00%)</title><rect x="536.5" y="69" width="39.0" height="15.0" fill="rgb(208,154,54)" rx="2" ry="2" />
<text text-anchor="" x="539.50" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >jav..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.TimerThread.run() (5 samples, 12.50%)</title><rect x="673.0" y="213" width="97.5" height="15.0" fill="rgb(215,195,44)" rx="2" ry="2" />
<text text-anchor="" x="676.00" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.util.T..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.cs.UTF_8$Encoder.encode(char[], int, int, byte[]) (1 samples, 2.50%)</title><rect x="614.5" y="85" width="19.5" height="15.0" fill="rgb(205,168,40)" rx="2" ry="2" />
<text text-anchor="" x="617.50" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.cs.UTF_8$Encoder.encode(char[], int, int, byte[]) (3 samples, 7.50%)</title><rect x="49.0" y="85" width="58.5" height="15.0" fill="rgb(245,125,17)" rx="2" ry="2" />
<text text-anchor="" x="52.00" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sun.ni..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.ThreadLocal$ThreadLocalMap.access$000(java.lang.ThreadLocal$ThreadLocalMap, java.lang.ThreadLocal) (1 samples, 2.50%)</title><rect x="556.0" y="53" width="19.5" height="15.0" fill="rgb(254,122,40)" rx="2" ry="2" />
<text text-anchor="" x="559.00" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.TaskQueue.getMin() (1 samples, 2.50%)</title><rect x="731.5" y="181" width="19.5" height="15.0" fill="rgb(211,183,23)" rx="2" ry="2" />
<text text-anchor="" x="734.50" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.UnixFileSystem.getBooleanAttributes0(java.io.File) (4 samples, 10.00%)</title><rect x="29.5" y="149" width="78.0" height="15.0" fill="rgb(235,140,7)" rx="2" ry="2" />
<text text-anchor="" x="32.50" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.io.U..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringCoding$StringEncoder.encode(char[], int, int) (4 samples, 10.00%)</title><rect x="29.5" y="101" width="78.0" height="15.0" fill="rgb(254,22,54)" rx="2" ry="2" />
<text text-anchor="" x="32.50" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.lang..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.oracle.jrockit.jfr.InstantEvent.commit() (2 samples, 5.00%)</title><rect x="692.5" y="165" width="39.0" height="15.0" fill="rgb(244,98,29)" rx="2" ry="2" />
<text text-anchor="" x="695.50" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >com..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.UnixFileSystem.getBooleanAttributes(java.io.File) (4 samples, 10.00%)</title><rect x="29.5" y="165" width="78.0" height="15.0" fill="rgb(229,81,50)" rx="2" ry="2" />
<text text-anchor="" x="32.50" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.io.U..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringCoding.safeTrim(char[], int, java.nio.charset.Charset, boolean) (1 samples, 2.50%)</title><rect x="419.5" y="53" width="19.5" height="15.0" fill="rgb(227,10,51)" rx="2" ry="2" />
<text text-anchor="" x="422.50" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>oracle.jrockit.jfr.VMJFR$ThreadBuffer.ensure(int) (1 samples, 2.50%)</title><rect x="712.0" y="117" width="19.5" height="15.0" fill="rgb(234,53,3)" rx="2" ry="2" />
<text text-anchor="" x="715.00" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.&lt;init&gt;(byte[], int, int, java.lang.String) (11 samples, 27.50%)</title><rect x="361.0" y="117" width="214.5" height="15.0" fill="rgb(254,100,52)" rx="2" ry="2" />
<text text-anchor="" x="364.00" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.lang.String.&lt;init&gt;(byte..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringCoding.scale(int, float) (1 samples, 2.50%)</title><rect x="400.0" y="53" width="19.5" height="15.0" fill="rgb(216,10,48)" rx="2" ry="2" />
<text text-anchor="" x="403.00" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.jerolba.codemotion.FileSystemExplorer.main(java.lang.String[]) (34 samples, 85.00%)</title><rect x="10.0" y="213" width="663.0" height="15.0" fill="rgb(228,138,2)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="223.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >com.jerolba.codemotion.FileSystemExplorer.main(java.lang.String[])</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.getBytes(java.lang.String) (4 samples, 10.00%)</title><rect x="575.5" y="133" width="78.0" height="15.0" fill="rgb(212,117,6)" rx="2" ry="2" />
<text text-anchor="" x="578.50" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.lang..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.File.list() (15 samples, 37.50%)</title><rect x="361.0" y="165" width="292.5" height="15.0" fill="rgb(229,7,22)" rx="2" ry="2" />
<text text-anchor="" x="364.00" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.io.File.list()</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.getBytes(java.lang.String) (4 samples, 10.00%)</title><rect x="29.5" y="133" width="78.0" height="15.0" fill="rgb(240,213,41)" rx="2" ry="2" />
<text text-anchor="" x="32.50" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.lang..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringCoding.encode(java.lang.String, char[], int, int) (4 samples, 10.00%)</title><rect x="575.5" y="117" width="78.0" height="15.0" fill="rgb(219,88,44)" rx="2" ry="2" />
<text text-anchor="" x="578.50" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.lang..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.File.listFiles() (28 samples, 70.00%)</title><rect x="107.5" y="181" width="546.0" height="15.0" fill="rgb(254,105,26)" rx="2" ry="2" />
<text text-anchor="" x="110.50" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.io.File.listFiles()</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.ThreadLocal.get() (1 samples, 2.50%)</title><rect x="634.0" y="85" width="19.5" height="15.0" fill="rgb(225,167,44)" rx="2" ry="2" />
<text text-anchor="" x="637.00" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringCoding.access$300(byte[], int, java.nio.charset.Charset, boolean) (2 samples, 5.00%)</title><rect x="575.5" y="85" width="39.0" height="15.0" fill="rgb(213,61,53)" rx="2" ry="2" />
<text text-anchor="" x="578.50" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >jav..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.ThreadLocal$ThreadLocalMap.getEntry(java.lang.ThreadLocal) (1 samples, 2.50%)</title><rect x="556.0" y="37" width="19.5" height="15.0" fill="rgb(220,87,20)" rx="2" ry="2" />
<text text-anchor="" x="559.00" y="47.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.charAt(int) (1 samples, 2.50%)</title><rect x="341.5" y="133" width="19.5" height="15.0" fill="rgb(230,53,13)" rx="2" ry="2" />
<text text-anchor="" x="344.50" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.concurrent.LinkedBlockingQueue.offer(java.lang.Object) (1 samples, 2.50%)</title><rect x="653.5" y="165" width="19.5" height="15.0" fill="rgb(252,142,39)" rx="2" ry="2" />
<text text-anchor="" x="656.50" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.String.&lt;init&gt;(byte[], java.lang.String) (11 samples, 27.50%)</title><rect x="361.0" y="133" width="214.5" height="15.0" fill="rgb(252,8,39)" rx="2" ry="2" />
<text text-anchor="" x="364.00" y="143.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.lang.String.&lt;init&gt;(byte..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringCoding.access$000(int, float) (1 samples, 2.50%)</title><rect x="400.0" y="69" width="19.5" height="15.0" fill="rgb(218,219,40)" rx="2" ry="2" />
<text text-anchor="" x="403.00" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.AbstractQueue.add(java.lang.Object) (1 samples, 2.50%)</title><rect x="653.5" y="181" width="19.5" height="15.0" fill="rgb(254,53,25)" rx="2" ry="2" />
<text text-anchor="" x="656.50" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.TaskQueue.fixDown(int) (1 samples, 2.50%)</title><rect x="751.0" y="165" width="19.5" height="15.0" fill="rgb(242,10,0)" rx="2" ry="2" />
<text text-anchor="" x="754.00" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringCoding$StringEncoder.encode(char[], int, int) (3 samples, 7.50%)</title><rect x="575.5" y="101" width="58.5" height="15.0" fill="rgb(245,15,49)" rx="2" ry="2" />
<text text-anchor="" x="578.50" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.l..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringCoding.safeTrim(byte[], int, java.nio.charset.Charset, boolean) (2 samples, 5.00%)</title><rect x="575.5" y="69" width="39.0" height="15.0" fill="rgb(226,6,10)" rx="2" ry="2" />
<text text-anchor="" x="578.50" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >jav..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringCoding.decode(java.lang.String, byte[], int, int) (10 samples, 25.00%)</title><rect x="380.5" y="101" width="195.0" height="15.0" fill="rgb(219,168,17)" rx="2" ry="2" />
<text text-anchor="" x="383.50" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.lang.StringCoding.de..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringCoding.access$100(char[], int, java.nio.charset.Charset, boolean) (1 samples, 2.50%)</title><rect x="419.5" y="69" width="19.5" height="15.0" fill="rgb(205,154,24)" rx="2" ry="2" />
<text text-anchor="" x="422.50" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringCoding.scale(int, float) (1 samples, 2.50%)</title><rect x="29.5" y="69" width="19.5" height="15.0" fill="rgb(241,161,34)" rx="2" ry="2" />
<text text-anchor="" x="32.50" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringCoding.encode(java.lang.String, char[], int, int) (4 samples, 10.00%)</title><rect x="29.5" y="117" width="78.0" height="15.0" fill="rgb(254,67,49)" rx="2" ry="2" />
<text text-anchor="" x="32.50" y="127.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.lang..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.TimerThread.mainLoop() (5 samples, 12.50%)</title><rect x="673.0" y="197" width="97.5" height="15.0" fill="rgb(246,167,25)" rx="2" ry="2" />
<text text-anchor="" x="676.00" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.util.T..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.File.&lt;init&gt;(java.lang.String, java.io.File) (4 samples, 10.00%)</title><rect x="283.0" y="165" width="78.0" height="15.0" fill="rgb(250,190,52)" rx="2" ry="2" />
<text text-anchor="" x="286.00" y="175.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.io.F..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.io.File.isFile() (4 samples, 10.00%)</title><rect x="29.5" y="181" width="78.0" height="15.0" fill="rgb(208,115,54)" rx="2" ry="2" />
<text text-anchor="" x="32.50" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.io.F..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringCoding.access$000(int, float) (1 samples, 2.50%)</title><rect x="29.5" y="85" width="19.5" height="15.0" fill="rgb(221,89,10)" rx="2" ry="2" />
<text text-anchor="" x="32.50" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.oracle.jrockit.jfr.InstantEvent.write() (2 samples, 5.00%)</title><rect x="692.5" y="149" width="39.0" height="15.0" fill="rgb(217,1,14)" rx="2" ry="2" />
<text text-anchor="" x="695.50" y="159.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >com..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>sun.nio.cs.UTF_8$Decoder.decode(byte[], int, int, char[]) (4 samples, 10.00%)</title><rect x="439.0" y="69" width="78.0" height="15.0" fill="rgb(242,91,27)" rx="2" ry="2" />
<text text-anchor="" x="442.00" y="79.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >sun.nio.c..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.util.Arrays.copyOf(byte[], int) (2 samples, 5.00%)</title><rect x="575.5" y="53" width="39.0" height="15.0" fill="rgb(213,218,1)" rx="2" ry="2" />
<text text-anchor="" x="578.50" y="63.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >jav..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringCoding.deref(java.lang.ThreadLocal) (1 samples, 2.50%)</title><rect x="634.0" y="101" width="19.5" height="15.0" fill="rgb(238,133,36)" rx="2" ry="2" />
<text text-anchor="" x="637.00" y="111.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  ></text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>com.jerolba.codemotion.FileSystemExplorer.explore(java.lang.String) (34 samples, 85.00%)</title><rect x="10.0" y="197" width="663.0" height="15.0" fill="rgb(238,109,23)" rx="2" ry="2" />
<text text-anchor="" x="13.00" y="207.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >com.jerolba.codemotion.FileSystemExplorer.explore(java.lang.String)</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (2 samples, 5.00%)</title><rect x="692.5" y="181" width="39.0" height="15.0" fill="rgb(250,191,41)" rx="2" ry="2" />
<text text-anchor="" x="695.50" y="191.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >jav..</text>
</g>
<g class="func_g" onmouseover="s(this)" onmouseout="c()" onclick="zoom(this)">
<title>java.lang.StringCoding.deref(java.lang.ThreadLocal) (3 samples, 7.50%)</title><rect x="517.0" y="85" width="58.5" height="15.0" fill="rgb(250,15,15)" rx="2" ry="2" />
<text text-anchor="" x="520.00" y="95.5" font-size="12" font-family="Verdana" fill="rgb(0,0,0)"  >java.l..</text>
</g>
</svg>
